version: '3.8'

services:
  app:
    image: front-dev
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-frontend:/usr/src/app
    container_name: front-dev

  server:
    image: back-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://root:example@mongo:27017/the_database
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    container_name: back-dev

  nginx:
    image: nginx:1.25-alpine
    container_name: reverse-proxy
    ports:
      - 8080:80
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - server

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    healthcheck:
      test: ["CMD", "mongosh", "the_database", "-u", "root", "-p", "example", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./redis_data:/data
